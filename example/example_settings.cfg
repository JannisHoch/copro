[general]
input_dir=example_data
output_dir=OUT
# 1: all data; 2: leave-one-out model; 3: single variable model; 4: dubbelsteenmodel
# Note that only 1 supports sensitivity_analysis
model=1
verbose=True
weighting_Y_train=True

[settings]
# start year
y_start=2008
# end year
y_end=2010

[PROJ_files]
# files used to make the projections
proj_nr_1=example_settings_proj.cfg

[PROJ_data]
population_total=example_data\Population\Population_worldpop_GID2_years_time.csv
population_growth=example_data\Population\DUMMY_Population_growth_SSP2_20102050_years.csv

[pre_calc]
# if nothing is specified, the XY array will be stored in output_dir
# if XY already pre-calculated, then provide path to npy-file
XY=

[migration]
migration_file=Migration\ADM2_SA_yearly_net_migration_Nepal.shp
#Migration\ADM2_SA_yearly_net_migration_Pakistan.shp
#Migration\ADM2_SA_yearly_net_migration_Bangladesh.shp
#Migration\ADM2_SA_yearly_net_migration_Nepal.shp 
#Migration\ADM2_SA_yearly_net_migration_exAfg.shp
migration_shapefile=GADM_GID2\ADM2_SA_merged_correct_WGS84.shp
migration_percentage=True # if this indicator is set to true, the calculation is done with % migration instead of the 
population_total=Population\Population_worldpop_GID2_years_time.csv

[climate]
shp=KoeppenGeiger\Koeppen_Geiger_1976-2000_WGS84.shp
# define either one or more classes (use abbreviations!) or specify nothing for not filtering
zones=
code2class=KoeppenGeiger\classification_codes.txt

[data]
# specify the path to the csv or nc-file, whether the variable shall be log-transformed (True, False), and which statistical function should be applied
# these three settings need to be separated by a comma
# NOTE: variable name here needs to be identical with variable name in nc or csv-file
# NOTE: only statistical functions supported by rasterstats are valid

#gdp_cap=socioeconomic\GDP_cap_GID2_2001-2015time.csv,True,mean
education=socioeconomic\education_GID2_2001-2015time.csv,False,mean
land_use_intensity=Land_use_intensity\Land_use_intensity_yearlytime.csv,False,mean
upper_soil_storage=hydro\storUppTotal_annuaAvg_output_1958-01-31_to_2015-12-31.nc,False,mean
population_density=Population\Population_density_worldpop_GID2_time.csv,True,mean
#population_growth=Population\Population_growth_worldpop_GID2_time.csv,True,mean
#child_stunting=socioeconomic\Stunting_SA_GID_2_2001-2015time.csv,True,mean
#spei=hydro\spei12_long_1900-2018_yearmean.nc,False,max # has + and - values, good to log-transform? 
#flood_innundation_volume=hydro\flood_Volume_annuaAvg_output_1958-01-31_to_2015-12-31.nc,True,max
timeseries-hi35-annual-mean=Heat_risk\timeseries-hi35-annual-mean_era_annual_era5-0.5x0.5-timeseries_mean_1950-2020time.nc,True,mean # number of days above 35 degrees

[timelag]
# indicating whether a time lag should be set per variable 
gdp_cap=False
education=False
land_use_intensity=False
upper_soil_storage=True
population_density=False
population_growth=False
child_stunting=False
spei=True
flood_innundation_volume=False
timeseries-hi35-annual-mean=False

[crs]
upper_soil_storage=WGS84
spei=WGS84
flood_innundation_volume=WGS84
timeseries-hi35-annual-mean=WGS84

[machine_learning]
# choose from: MinMaxScaler, StandardScaler, RobustScaler, QuantileTransformer
scaler=QuantileTransformer
# choose from: NuSVC, KNeighborsClassifier, RFClassifier, RFRegression
model=RFRegression
train_fraction=0.7
# number of repetitions
n_runs=5