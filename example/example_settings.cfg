[general]
input_dir=example_data
output_dir=OUT
verbose=True
weighting_Y_train=False # based on population of a polygon. This is a tricky setting, when there are exactly overlapping migration numbers 
one_year_migration_average=True
three_year_migration_average=False
five_year_migration_average=False 

[settings]
# the number of years must logically follow from # average migration years which is set under [general]
# start year
y_start=2008
# end year
y_end=2010
# indicating whether the model should assess all migration, in migration, or solely out migration
migration_all=True
migration_in=False
migration_out=False

classification=True

[PROJ_files]
# files used to make the projections
proj_nr_1=example_settings_proj.cfg

[PROJ_data]
population_total=example_data\Population\Population_total_worldpop_GID2_2000-2020_years.csv # Rural_population_worldpop_GID2_2000-2019_years.csv # Path to total population to calculate ratio and as starting point of the projections
population_growth=example_data\Population\Population_growth_SSP1_20102050_years.csv 

[pre_calc]
# if nothing is specified, the XY array will be stored in output_dir
# if XY already pre-calculated, then provide path to npy-file
XY=

[migration]
migration_file=Migration\SA_GID2_net_migration_2000-2019_Nepal.shp # SA_GID2_net_migration_2000-2019_Nepal.shp #SA_posneg_migration_2000-2019__Nepal.shp # shapefile with absolute migration per polygon
migration_shapefile=GADM_GID2\ADM2_SA_merged_correct_WGS84.shp 
migration_percentage=False # if this indicator is set to true, the calculation is done with % migration instead of the absolute number of migrants
population_total=Population\Population_total_worldpop_GID2_2000-2020_years.csv

[climate]
shp=KoeppenGeiger\Koeppen_Geiger_1976-2000_WGS84.shp
# define either one or more classes (use abbreviations!) or specify nothing for not filtering # dry zones: BHs,BSk, BWh, BWk -- tropical zones: Af, As, Am, Aw
zones=
code2class=KoeppenGeiger\classification_codes.txt

[data]
# specify the path to the csv or nc-file, whether the variable shall be log-transformed (True, False), and which statistical function should be applied
# these three settings need to be separated by a comma
# NOTE: variable name here needs to be identical with variable name in nc or csv-file

# GNI_cap=socioeconomic/GNI_cap_2000-2021.csv,False,mean
#GINI=socioeconomic/GINI_inequality_2000-2021.csv,False,mean
#education=socioeconomic/Education_2000-2021.csv,False,mean
# land_use_intensity=Land_use/Land_use_intensity_2000-2020.csv,False,mean
child_stunting=socioeconomic/Child_stunting_2000-2019_years.csv,False,mean
flood_innundation_volume=hydro/flood_Volume_annuaAvg_output_1958-01-31_to_2015-12-31.nc,False,max
timeseries-hi35-annual-mean=Heat_risk/timeseries-hi35-annual-mean_era_annual_era5-0.5x0.5-timeseries_mean_1950-2020time.nc,False,max # number of days above 35 degrees per year
#built_up_land=Land_use/Built_up_land_2000-2020.csv,False,mean
#conflict=Conflict_events__10deaths_1999-2019_years.csv,False,mean
#timeseries-cdd-annual-mean=hydro/timeseries-cdd-annual-mean_era_annual_era5-0.5x0.5-timeseries_mean_1950-2020_timeCoord.nc,False,max # maximum number of consecutive dry days per year
#timeseries-pr-annual-mean=hydro/timeseries-pr-annual-mean_cru_annual_cru-ts4.06-timeseries_mean_1901-2021.nc,False,mean # precipation
#GRAPC=Yields/GRAPC_SSP2-RCP45_exNFBFC.nc,False,mean # actual yields GANNTMP_30MIN=Heat_risk/GANNTMP_30MIN_RCP45.nc,False,mean
#GANNTMP_30MIN=Heat_risk/GANNTMP_30MIN_RCP45.nc,False,mean


[timelag]
# indicating whether a time lag should be set per variable 
GNI_cap=True
GINI=True
education=True
land_use_intensity=True
upper_soil_storage=True
population_density=True
child_stunting=True
spei=True
flood_innundation_volume=False
timeseries-hi35-annual-mean=True # number of days above 35 degrees
climatology-pr-annual-mean=True # precipitation 
conflict=False
timeseries-pr-annual-mean=True # precipation
timeseries-cdd-annual-mean=False # maximum number of consecutive dry days per year
GRAPC=True # actual yields
built_up_land=True
GANNTMP_30MIN=True # temperature
timeseries-prpercnt-annual-mean=True 

[crs]
upper_soil_storage=WGS84
spei=WGS84
flood_innundation_volume=WGS84
timeseries-hi35-annual-mean=WGS84
climatology-pr-annual-mean=WGS84
timeseries-pr-annual-mean=WGS84
timeseries-cdd-annual-mean=WGS84
GRAPC=WGS84
GANNTMP_30MIN=WGS84
timeseries-prpercnt-annual-mean=WGS84

[machine_learning]

# choose from: MinMaxScaler, StandardScaler, RobustScaler, QuantileTransformer
scaler=RobustScaler
# choose from: RFClassifier, RFRegression
model=RFClassifier
train_fraction=0.7
# number of repetitions
n_runs=2